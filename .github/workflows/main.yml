name: Build and push coffeeapp image and restart containers

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.2.2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build app with Maven
        run: |
          mvn clean package -DskipTests=true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.9.0

      - name: Build and push coffeeapp image
        uses: docker/build-push-action@v6.14.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/coffeeapp-miahkykh:latest

      - name: SSH Restart MySQL container (CMD)
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script_stop: true
          debug: true
          command_timeout: "10m"
          script: |
            @echo on
            echo === STARTING MYSQL CONTAINER DEPLOYMENT ===
            echo === Checking Docker version ===
            docker --version
            
            echo === Checking existing networks ===
            docker network ls
            
            echo === Creating network if it doesn't exist ===
            docker network ls | findstr coffeestore-miahkykh > nul
            if %ERRORLEVEL% NEQ 0 (
              echo Creating network coffeestore-miahkykh...
              docker network create coffeestore-miahkykh
              echo Network created successfully.
            ) else (
              echo Network coffeestore-miahkykh already exists.
            )
            
            echo === Stopping existing MySQL container ===
            docker ps -a | findstr coffeeapp-miahkykh-mysql > nul
            if %ERRORLEVEL% EQU 0 (
              echo Found existing container, stopping it...
              docker stop coffeeapp-miahkykh-mysql 2>nul || echo Failed to stop container
              echo Removing container...
              docker rm coffeeapp-miahkykh-mysql 2>nul || echo Failed to remove container
              echo Container removed.
            ) else (
              echo No existing MySQL container found.
            )
            
            echo === Pulling latest MySQL image ===
            docker pull mysql:latest
            echo Image pulled successfully.
            
            echo === Starting new MySQL container ===
            docker run -d --name coffeeapp-miahkykh-mysql --net coffeestore-miahkykh -e MYSQL_ROOT_PASSWORD=0000 -e MYSQL_DATABASE=CoffeeAppMiahkykh -p 3310:3306 mysql:latest
            
            echo === Verifying container started ===
            docker ps | findstr coffeeapp-miahkykh-mysql
            
            echo === MySQL container deployment complete ===

      - name: SSH Restart coffeeapp container (CMD)
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script_stop: true
          debug: true
          command_timeout: "30m"
          script: |
            @echo on
            echo === STARTING COFFEEAPP CONTAINER DEPLOYMENT ===
            echo === Checking Docker version ===
            docker --version
            
            echo === Checking existing networks ===
            docker network ls
            
            echo === Creating network if it doesn't exist ===
            docker network ls | findstr coffeestore-miahkykh > nul
            if %ERRORLEVEL% NEQ 0 (
              echo Creating network coffeestore-miahkykh...
              docker network create coffeestore-miahkykh
              echo Network created successfully.
            ) else (
              echo Network coffeestore-miahkykh already exists.
            )
            
            echo === Stopping existing coffeeapp container ===
            docker ps -a | findstr coffeeapp-miahkykh > nul
            if %ERRORLEVEL% EQU 0 (
              echo Found existing container, stopping it...
              docker stop coffeeapp-miahkykh 2>nul || echo Failed to stop container
              echo Removing container...
              docker rm coffeeapp-miahkykh 2>nul || echo Failed to remove container
              echo Container removed.
            ) else (
              echo No existing coffeeapp container found.
            )
            
            echo === Pulling latest coffeeapp image ===
            docker pull glyuchnoglaz21/coffeeapp-miahkykh:latest
            echo Image pulled successfully.
            
            echo === Starting new coffeeapp container ===
            docker run -d --name coffeeapp-miahkykh ^
              --net coffeestore-miahkykh ^
              -p 8080:8080 ^
              -e SPRING_DATASOURCE_URL=jdbc:mysql://coffeeapp-miahkykh-mysql:3306/CoffeeAppMiahkykh?createDatabaseIfNotExist=true ^
              -e SPRING_DATASOURCE_USERNAME=root ^
              -e SPRING_DATASOURCE_PASSWORD=0000 ^
              glyuchnoglaz21/coffeeapp-miahkykh:latest
            
            echo === Verifying container started ===
            docker ps | findstr coffeeapp-miahkykh
            
            echo === COFFEEAPP container deployment complete ===
